<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>버짱버짱 서버 상태 확인</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin-top: 50px;
        }
        #status {
            font-size: 24px;
            color: green;
        }
        #status.offline {
            color: red;
        }
        #container{
            display: inline-block;
            position: relative;
            padding: 10px;
            /* border-radius: 10px; */
            background: rgb(94, 66, 32);
            text-align: left;
            visibility: hidden;
        }
        .icon-motd{
            display: flex;
            align-items: center;
        }
        #image{
            width: 64px;
            height: 64px;
            margin-right: 10px;
        }
        #motd {
            font-size: 20px;
            margin-right: 20px;
            margin-left: 10px;
        }
        #players{
            position: absolute;
            top:0;
            left:100%;
            width: 175px;
            max-height: 300px;
            overflow-y: auto;
            background-color: white;
            border: 1px solid black;
            z-index: 1;
            opacity: 0;
            visibility: hidden; /* 기본적으로 숨김 */
            transition: visibility 0.5s, opacity 0.5s ease;
        }
        #ping-players{
            display: flex;
            height: 16px;
            position: absolute;
            top: 10px;
            right: 5px;
            align-items: center;
            text-align: right;
        }
        #playerOnPing{
            font-size: 10px;
            color: white;
            margin-right: 3px;
        }
        #ping-icon{
            height: 15px;
            width: 12px;
            margin-left: 2px;
        }
        #container:hover #players {
            opacity: 1;
            visibility: visible;
            /* 아니 아이콘에 올리면 펴지게 바꿔야하는데 */
        }
        #players p{
            margin: 10px;
        }
        #players img{
            float: left;
            margin-right: 5px;
        }
        #otherservercheak{
            visibility: hidden;
        }
        #moreInfo{
            visibility: hidden;
        }
        #infoSummary{
            width: 200px;
            height: 100px;
            font-size: 12px;
            text-align: left;
            margin: 0 auto;
        }
    </style>
    <!-- 스타일 -->
</head>
<body>
    <!-- 재목 -->
    <h1>버짱버짱 서버 상태</h1>
    <p id="status">서버 상태를 확인 중입니다...</p>
    <!-- 서버 아이콘 & motd -->
    <div id="container">
        <div id="ping-players">
            <div id="playerOnPing"></div>
            <img id="ping-icon" src="ping_5.png" title="플레이어 목록 보기">
        </div>

        <div class="icon-motd">
            <img id="image" style="margin: 5px;">
            <div id="motd"></div>
        </div>
        <!-- 플레이어 리스트 -->
        <div id="players">
            <p>플레이어 목록 불러오는중...</p>
        </div>
    </div>
    <!-- 다른서버 확인하기 버튼 -->
    <div id="otherservercheak">
        <label>다른 서버 상태 확인하기:</label>
        <input type="text" id="servernameinput" onkeyup="if(window.event.keyCode==13){serverNameInuput()}">
        <button onclick="serverNameInuput()">확인하기</button>
        <br>
        <button onclick="serverNameInuput('39.119.39.6')" style="background-color: yellow; border-color: limegreen;">레몬서버</button>
        <button onclick="serverNameInuput('mc.overjjang.kro.kr')" style="background-color: cyan; border-color: gray;">버짱서버</button>
        <button onclick="serverNameInuput('loungeonline.kro.kr')">시험서버</button>
        <button onclick="serverNameInuput('hypixel.net')" style="background-color: midnightblue; color: white;">하이픽셀</button>
    </div>

    <!-- 서버 추가정보 -->
    <div id="moreInfo">
        <details>
            <summary>서버 추가 정보</summary>
            <div id="infoSummary"></div>
        </details>
    </div>
    <!-- 본채 -->
    <script>
        let servername = "loungeonline.kro.kr";
        // 레몬서버: 39.119.39.6
        const serverIP = 'your.server.ip';  // 여기에 확인하려는 서버의 IP 주소나 도메인 입력
        const apiUrlBase = 'https://api.mcsrvstat.us/3/';
        
        function serverNameInuput(fixedServerName = '') {
            const statusElement = document.getElementById('status');
            const input = document.getElementById('servernameinput').value;
            const container = document.getElementById("container");
            const serverchange = document.getElementById("otherservercheak");
            const moreInfo = document.getElementById("moreInfo");
            servername = input ? input : servername;
            servername = fixedServerName ? fixedServerName : input;
            statusElement.classList.remove('offline');
            statusElement.innerHTML = `서버 상태를 확인 중입니다...`;
            container.style.visibility = "hidden";
            serverchange.style.visibility = 'hidden';
            moreInfo.style.visibility = 'hidden';
            checkServerStatus();
            
        }

        function checkServerStatus() {
            const apiUrl = `${apiUrlBase}${servername}`;
            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    const statusElement = document.getElementById('status');
                    const imageView = document.getElementById('image');
                    const motdView = document.getElementById('motd');
                    const playerList = document.getElementById('players');
                    const table = document.getElementById("tb");
                    const container = document.getElementById("container")
                    const serverchange = document.getElementById("otherservercheak");
                    const playerOnPing = document.getElementById("playerOnPing");
                    const moreInfo = document.getElementById("moreInfo");
                    const infoSummary = document.getElementById("infoSummary");
                    if (data.online) {
                        console.log(data);
                        statusElement.innerHTML = `서버가 열려 있습니다!<br>현재 플레이어: ${data.players.online} / ${data.players.max} `;
                        statusElement.innerHTML += `<br>서버 주소 : ${servername}`
                        playerOnPing.innerHTML = `${data.players.online} / ${data.players.max}`
                        if(data.version && data.version.includes(".")){
                            statusElement.innerHTML += `<br>서버 버전 : ${data.version}`
                        }
                        else{
                            statusElement.innerHTML += `<br>서버 버전 : ${data.protocol.name}`
                        }
                        if(data.icon) imageView.src = `${data.icon}`;
                        else {
                            imageView.style.width = "64px";
                            imageView.style.height = "64px";
                            imageView.src = `Unknown_server.png`;
                        }
                        motdView.innerHTML = `${data.motd.html[0]}<br>`;
                        if (data.motd.html[1]) motdView.innerHTML +=`${data.motd.html[1]}`;
                        if (data.players.list){
                            playerList.innerHTML = `<h3>플레이어 목록:</h3>`;
                            var i=0;
                            console.log(data.players.list.length);
                            data.players.list.forEach(player => {
                                playerList.innerHTML +=`
                                    <img src="https://minotar.net/helm/${player.name}/100.png" style="width: 16px; height: 16px;" alt="${player.name}">  ${player.name}<br>`
                            });
                            if(data.players.online>data.players.list.length){
                                playerList.innerHTML += `외 ${data.players.online-data.players.list.length}명의 플레이어...`;
                            }
                        }
                        else if(data.players.online>0) playerList.innerHTML = `<p>플레이어 리스트를<br>불러올 수 없습니다.</p>`;
                        else playerList.innerHTML = `<p>플레이어가 없습니다</p>`
                        container.style.visibility = `visible`;
                        serverchange.style.visibility = `visible`;
                        moreInfo.style.visibility = `visible`;
                        infoSummary.innerHTML = ``;
                        if (data.software) infoSummary.innerHTML += `서버 소프트웨어: ${data.software}<br>`;
                        if (data.version) infoSummary.innerHTML += `서버 버전: ${data.version}<br>`;
                        if (data.protocol) infoSummary.innerHTML += `서버 프로토콜: ${data.protocol.name}<br>서버 프로토콜 버전: ${data.protocol.version}<br>`;
                        if (data.plugins) {
                            pluginlist = "";
                            data.plugins.forEach(Plugin =>{
                                pluginlist +=`${Plugin.name} - ${Plugin.version}<br>`

                            })
                            infoSummary.innerHTML +=`<details><summary>플러그인 목록: </summary> ${pluginlist} </detalis>`;
                        }
                        if (data.mods) {
                            let modlist = "";
                            // for(let mod of data.mods){
                            //     modlist +=`${mod.name}`
                            //     if(mod.version.includes(".")) modlist += ` - ${mod.version}`
                            //     modlist += `<br>`
                            // }
                            data.mods.forEach(mod =>{
                                modlist +=`${mod.name}`
                                if(mod.version.includes(".")) modlist += ` - ${mod.version}`
                                modlist += `<br>`
                            })
                            infoSummary.innerHTML +=`<details><summary>모드 목록: </summary> ${modlist} </detalis>`;

                        }

                        statusElement.classList.remove('offline');
                    }

                    // 서버가 닫혀있을때
                    else {
                        statusElement.textContent = '서버가 닫혀 있습니다.';
                        imageView.src = ``;
                        motdView.innerHTML = ``;
                        container.style.visibility = `hidden`;
                        playerList.innerHTML = ``;
                        serverchange.style.visibility = "visible"
                        statusElement.classList.add('offline');
                    }
                })
                .catch(error => {
                    document.getElementById('status').textContent = '서버 상태를 확인할 수 없습니다.';
                    console.error('Error fetching server status:', error);
                    const otherservercheak = document.getElementById("otherservercheak")
                    otherservercheak.style.visibility = `visible`;
                });
        }

        // 페이지 로드 시 서버 상태 확인
        checkServerStatus();

        // 1분마다 서버 상태 갱신
        setInterval(checkServerStatus, 60000);
    </script>
</body>
</html>
